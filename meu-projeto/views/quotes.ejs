<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <title>Taskline - Quotes</title>
  </head>
  <body class="min-h-screen bg-gray-100">
    <%- include('partials/header', { userName }) %>

    <main class="max-w-3xl mx-auto space-y-6 p-6">
      <h1 class="text-2xl font-bold text-center">Quotes Inspiradoras</h1>

      <!-- Form de criação/edição -->
      <div class="bg-white p-6 rounded shadow">
        <h2 class="font-medium mb-2" id="quote-form-title">Nova Quote</h2>
        <form id="quote-form" class="space-y-4">
          <textarea id="quote-content" placeholder="Digite sua frase inspiradora..." required
            class="w-full border px-3 py-2 rounded h-24 focus:outline-none focus:ring focus:border-blue-300"></textarea>
          <div class="flex justify-end space-x-2">
            <button type="button" id="cancel-edit" class="hidden text-gray-600 hover:underline">Cancelar</button>
            <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition">
              Salvar
            </button>
          </div>
        </form>
      </div>

      <!-- Lista de quotes -->
      <div id="quotes-list" class="space-y-4"></div>
    </main>

    <%- include('partials/footer') %>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('quote-form');
        const textarea = document.getElementById('quote-content');
        const listDiv = document.getElementById('quotes-list');
        const titleH2 = document.getElementById('quote-form-title');
        const btnCancel = document.getElementById('cancel-edit');

        let editingId = null;

        function loadQuotes() {
          fetch('/api/quotes')
            .then(res => res.json())
            .then(quotes => {
              listDiv.innerHTML = '';
              quotes.forEach(q => {
                const div = document.createElement('div');
                div.className = 'bg-white p-4 rounded shadow flex justify-between items-start';
                div.innerHTML = `
                  <p class="text-gray-800">${q.content}</p>
                  <div class="space-x-2">
                    <button data-id="${q.id}" class="edit-quote text-blue-500 hover:underline text-sm">Editar</button>
                    <button data-id="${q.id}" class="delete-quote text-red-500 hover:underline text-sm">Excluir</button>
                  </div>
                `;
                listDiv.appendChild(div);
              });
              attachListeners();
            });
        }

        function attachListeners() {
          document.querySelectorAll('.edit-quote').forEach(btn => {
            btn.onclick = () => {
              const id = btn.dataset.id;
              fetch('/api/quotes')
                .then(res => res.json())
                .then(quotes => {
                  const q = quotes.find(x => x.id == id);
                  if (q) {
                    editingId = id;
                    textarea.value = q.content;
                    titleH2.innerText = 'Editar Quote';
                    btnCancel.classList.remove('hidden');
                  }
                });
            };
          });
          document.querySelectorAll('.delete-quote').forEach(btn => {
            btn.onclick = () => {
              const id = btn.dataset.id;
              if (confirm('Deseja realmente excluir?')) {
                fetch(`/api/quotes/${id}`, { method: 'DELETE' })
                  .then(_ => loadQuotes());
              }
            };
          });
        }

        form.onsubmit = e => {
          e.preventDefault();
          const content = textarea.value.trim();
          if (!content) return;
          if (editingId) {
            fetch(`/api/quotes/${editingId}`, {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ content })
            }).then(_ => {
              editingId = null;
              textarea.value = '';
              titleH2.innerText = 'Nova Quote';
              btnCancel.classList.add('hidden');
              loadQuotes();
            });
          } else {
            fetch('/api/quotes', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ content })
            }).then(_ => {
              textarea.value = '';
              loadQuotes();
            });
          }
        };

        btnCancel.onclick = () => {
          editingId = null;
          textarea.value = '';
          titleH2.innerText = 'Nova Quote';
          btnCancel.classList.add('hidden');
        };

        loadQuotes();
      });
    </script>
  </body>
</html>
