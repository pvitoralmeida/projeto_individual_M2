<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <title>Taskline - Seções</title>
  </head>
  <body class="min-h-screen bg-gray-100">
    <%- include('partials/header', { userName }) %>

    <main class="max-w-5xl mx-auto space-y-8 p-6">
      <h1 class="text-2xl font-bold text-center">Minhas Seções</h1>

      <!-- Form de criação de seção -->
      <div class="bg-white p-6 rounded shadow">
        <h2 class="font-medium mb-2">Criar nova seção</h2>
        <form id="form-create-section" class="flex space-x-2">
          <input type="text" id="section-name" placeholder="Nome da seção" required
                 class="flex-1 border px-3 py-2 rounded focus:outline-none focus:ring focus:border-blue-300">
          <button type="submit" 
                  class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition">
            Adicionar
          </button>
        </form>
      </div>

      <!-- Lista de seções (injetada via JavaScript) -->
      <div id="sections-list" class="space-y-4"></div>
    </main>

    <%- include('partials/footer') %>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const sectionsList = document.getElementById('sections-list');
        const formCreate = document.getElementById('form-create-section');
        const inputName = document.getElementById('section-name');

        function loadSections() {
          fetch('/api/sections')
            .then(res => res.json())
            .then(data => {
              sectionsList.innerHTML = '';
              data.forEach(sec => {
                const sectionDiv = document.createElement('div');
                sectionDiv.className = 'bg-white p-4 rounded shadow';

                sectionDiv.innerHTML = `
                  <div class="flex justify-between items-center mb-2">
                    <h3 class="text-lg font-medium">${sec.name}</h3>
                    <div class="space-x-2">
                      <button data-id="${sec.id}" class="edit-section text-blue-500 hover:underline text-sm">Editar</button>
                      <button data-id="${sec.id}" class="delete-section text-red-500 hover:underline text-sm">Excluir</button>
                    </div>
                  </div>
                  <div class="ml-4" id="tasks-for-${sec.id}"></div>
                  <form data-section-id="${sec.id}" class="mt-4 flex space-x-2 create-task-form">
                    <input type="text" name="title" placeholder="Título da tarefa" required
                      class="flex-1 border px-3 py-2 rounded focus:outline-none focus:ring focus:border-blue-300">
                    <input type="date" name="due_date" required
                      class="border px-3 py-2 rounded focus:outline-none focus:ring focus:border-blue-300">
                    <input type="time" name="due_time" required
                      class="border px-3 py-2 rounded focus:outline-none focus:ring focus:border-blue-300">
                    <button type="submit" 
                      class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition text-sm">
                      +
                    </button>
                  </form>
                `;
                sectionsList.appendChild(sectionDiv);
                loadTasksForSection(sec.id);
              });
              attachSectionEventListeners();
            });
        }

        function loadTasksForSection(sectionId) {
          fetch('/api/tasks')
            .then(res => res.json())
            .then(tasks => {
              const container = document.getElementById(`tasks-for-${sectionId}`);
              container.innerHTML = '';
              tasks
                .filter(t => t.section_id === sectionId)
                .forEach(t => {
                  const div = document.createElement('div');
                  div.className = 'flex justify-between items-center bg-gray-50 px-3 py-2 rounded mb-2';
                  div.innerHTML = `
                    <div>
                      <input type="checkbox" data-id="${t.id}" class="toggle-complete mr-2" ${t.is_completed ? 'checked' : ''}>
                      <span class="${t.is_completed ? 'line-through text-gray-500' : ''}">${t.title}</span>
                      <small class="text-xs text-gray-400 ml-2">${t.due_date} ${t.due_time}</small>
                    </div>
                    <button data-id="${t.id}" class="delete-task text-red-500 hover:underline text-sm">Excluir</button>
                  `;
                  container.appendChild(div);
                });
              attachTaskEventListeners();
            });
        }

        formCreate.addEventListener('submit', e => {
          e.preventDefault();
          const name = inputName.value.trim();
          if (!name) return;
          fetch('/api/sections', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ name })
          })
            .then(_ => {
              inputName.value = '';
              loadSections();
            });
        });

        function attachSectionEventListeners() {
          document.querySelectorAll('.delete-section').forEach(btn => {
            btn.onclick = () => {
              const id = btn.dataset.id;
              fetch(`/api/sections/${id}`, { method: 'DELETE' })
                .then(_ => loadSections());
            };
          });
          document.querySelectorAll('.edit-section').forEach(btn => {
            btn.onclick = () => {
              const id = btn.dataset.id;
              const novoNome = prompt('Novo nome da seção:');
              if (novoNome && novoNome.trim()) {
                fetch(`/api/sections/${id}`, {
                  method: 'PUT',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ name: novoNome.trim() })
                })
                  .then(_ => loadSections());
              }
            };
          });

          document.querySelectorAll('.create-task-form').forEach(form => {
            form.onsubmit = e => {
              e.preventDefault();
              const secId = form.dataset.sectionId;
              const title = form.title.value.trim();
              const due_date = form.due_date.value;
              const due_time = form.due_time.value;
              if (!title || !due_date || !due_time) return;
              fetch('/api/tasks', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  title,
                  description: '',
                  due_date,
                  due_time,
                  section_id: parseInt(secId, 10)
                })
              }).then(_ => {
                form.reset();
                loadTasksForSection(parseInt(secId, 10));
              });
            };
          });
        }

        function attachTaskEventListeners() {
          document.querySelectorAll('.toggle-complete').forEach(chk => {
            chk.onchange = () => {
              const id = chk.dataset.id;
              const is_completed = chk.checked;
              fetch(`/api/tasks/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ is_completed })
              }).then(_ => loadSections());
            };
          });
          document.querySelectorAll('.delete-task').forEach(btn => {
            btn.onclick = () => {
              const id = btn.dataset.id;
              fetch(`/api/tasks/${id}`, { method: 'DELETE' })
                .then(_ => loadSections());
            };
          });
        }

        loadSections();
      });
    </script>
  </body>
</html>
